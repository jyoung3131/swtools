#!/bin/bash
#Create and modify a .ssh folder
#Run as sudo or root

# Make sure only root can run our script
if [ "$(id -u)" != "0" ]; then
   echo "This script must be run as root (or sudo)" 1>&2
   exit 1
fi

#Check to make sure a username was passed
if [ -z "$1" ] ; then 
   echo "Please pass a new username as the first argument"
   exit 1
fi

USERNAME=$1
HOMEDIR=/home/$USERNAME
cd $HOMEDIR
#Create an ssh folder and then set the permissions correctly.
mkdir -p .ssh
touch .ssh/authorized_keys
chmod 700 .ssh
chmod 600 .ssh/authorized_keys
chown -R $USERNAME .ssh
chgrp -R $USERNAME .ssh
#Add this user to the sshd_config file so that
#they can log in.
#Parameters for this script are -i (in place edit of file)
#Find the line with AllowUsers and then search to the end of that
#line and append the username.

SSHCFG='/etc/ssh/sshd_config'

#If plaintext passwords haven't been disabled, then disable them.
#NOTE: After running this, only key-based remote access will work.
#sed -i '/'"PasswordAuthentication yes"'/s/.*/'"PasswordAuthentication no"'/' $SSHCFG

FOUND=`grep -c "AllowUsers" $SSHCFG`
if [ $FOUND -eq 0 ]; then
    echo "Adding AllowUsers string"
    echo "AllowUsers $USERNAME" >> $SSHCFG
else
    echo "Updating AllowUsers"
    sed -i "/^AllowUsers/ s/$/ $USERNAME/" $SSHCFG
fi
#Restart SSH - the old sshd will remain open for any active connections.
service ssh restart
